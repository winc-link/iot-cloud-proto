syntax = "proto3";

package product;
option go_package = "github.com/winc-link/iot-cloud-proto/product";
import "common/common.proto";

message QueryProductListRequest{
  map<string, string> extra =1;
}

enum ProductNodeType {
  UnKnow = 0; //未知类型
  Gateway = 1; //网关
  Device = 2;  //直连设备
  SubDevice = 3; //网关子设备
}

enum ProductNetType {
  Other = 0;
  Cellular = 1;
  Wifi = 2;
  Ethernet = 3;
  NB = 4;
}

message QueryProductListResponse {
  message Productinfo {
    uint64 CreateAt = 1; //创建时间
    string ProductId = 2; //产品id
    string ProductName = 3;//产品名称
    string Description = 4;//描述
    ProductNodeType NodeType = 5;//产品的节点类型
    string DataFormat = 6;//上报数据的格式
    common.IotPlatform Platform = 7; //平台名称
    ProductNetType NetType = 8;//联网方式
    repeated Properties properties = 9;
    repeated Events events = 10;
    repeated Actions actions = 11;
    map<string, string> extra = 12;
  }
  message List {
    repeated Productinfo ProductInfo = 1;
  }
  message Data {
    uint32 Total = 4;
    List List = 5;
  }
  Data data = 1;
  string RequestId = 2;
  string Code = 3;
  bool Success = 4;
  string errorMessage = 5;
}

message QueryProductRequest {
  string productId = 1;
}

message QueryProductResponse {
  message Data {
    uint64 CreateAt = 1; //创建时间
    string ProductId = 2; //产品id
    string ProductName = 3;//产品名称
    string Description = 4;//描述
    ProductNodeType NodeType = 5;//产品的节点类型
    string DataFormat = 6;//上报数据的格式
    common.IotPlatform Platform = 7; //平台名称
    ProductNetType NetType = 8;//联网方式
    repeated Properties properties = 9;//属性
    repeated Events events = 10;//事件
    repeated Actions actions = 11; //动作
    map<string, string> extra = 12;
  }
  Data data = 1;
  string RequestId = 2;
  string Code = 3;
  bool Success = 4;
  string errorMessage = 5;
}

enum AccessMode {
  R = 0;
  W = 1;
  RW = 2;
}

message Typespec {
  string type = 1;
  uint32 min = 2;
  uint32 max = 3;
  uint32 step = 4;
  string unit = 5;
  string scale = 6;
  uint32 maxlen = 7;
  uint32 maxsize = 8;
  repeated string range = 9;
  repeated string lable = 10;
  string defaultValue = 11;
}

message Properties {
  string abilityId = 1;
  string productId = 2;
  string name = 3;
  string code = 4;
  AccessMode accessMode = 5;
  Typespec typeSpec = 6;
  map<string, string> extra = 7;
}

// events
message Events {
  string abilityId = 1;
  string productId = 2;
  string name = 3;
  string code = 4;
  string description = 5;
  repeated OutputParams OutputParams = 6;
  map<string, string> extra = 7;
}

message InputParams {
  string code = 1;
  string name = 2;
  Typespec typeSpec = 3;
}

message OutputParams {
  string code = 1;
  string name = 2;
  Typespec typeSpec = 3;
}

message Actions {
  string abilityId = 1;
  string productId = 2;
  string name = 3;
  string code = 4;
  string description = 5;
  repeated InputParams InputParams = 6;
  repeated OutputParams OutputParams = 7;
  map<string, string> extra = 8;
}


service RpcProduct {
  //查询所有产品
  rpc QueryProductList(QueryProductListRequest) returns (QueryProductListResponse) {}
  //查询单个产品
  rpc QueryProduct(QueryProductRequest) returns (QueryProductResponse) {}
}