syntax = "proto3";

package product;
option go_package = "github.com/winc-link/iot-cloud-proto/product";
import "common/common.proto";
import "google/protobuf/any.proto";


message QueryProductListRequest{
  map<string, string> extra =1;
}

enum ProductNodeType {
  UnKnow = 0; //未知类型
  Gateway = 1; //网关
  Device = 2;  //直连设备
  SubDevice = 3; //网关子设备
}

enum ProductNetType {
  Other = 0;
  Cellular = 1;
  Wifi = 2;
  Ethernet = 3;
  NB = 4;
}

message Productinfo {
  uint64 CreateAt = 1; //创建时间
  string ProductId = 2; //产品id
  string ProductName = 3;//产品名称
  string Description = 4;//描述
  ProductNodeType NodeType = 5;//产品的节点类型
  string DataFormat = 6;//上报数据的格式
  common.IotPlatform Platform = 7; //平台名称
  ProductNetType NetType = 8;//联网方式
  string protocolType = 13;//协议类型
  repeated Properties properties = 9;//属性
  repeated Events events = 10;//事件
  repeated Actions actions = 11; //动作
  map<string, string> extra = 12;
}

message QueryProductListResponse {
  message List {
    repeated Productinfo ProductInfo = 1;
  }
  message Data {
    uint32 Total = 4;
    List List = 5;
  }
  Data data = 1;
  string RequestId = 2;
  string Code = 3;
  bool Success = 4;
  string errorMessage = 5;
}

message QueryProductRequest {
  string productId = 1;
}

message QueryProductResponse {
  Productinfo Productinfo = 1;
  string RequestId = 2;
  string Code = 3;
  bool Success = 4;
  string errorMessage = 5;
}

enum AccessMode {
  R = 0;//读
  W = 1;//写
  RW = 2;//读写
}

message Item {
  string type = 1;
}

enum DataType {
  INT = 0;
  FLOAT = 1;
  TEXT = 2;
  DATE = 3;
  BOOL = 4;
  ENUM = 5;
  STRUCT = 6;
  ARRAY = 7;
}

message Typespec2 {
  DataType type = 1;//设备属性的数据类型
  string min = 2;//设备属性的最小值
  string max = 3;//设备属性的最大值
  string step = 4;//设备属性的步长
  string unit = 5;//属性单位
  string unitName = 16;//单位名称
  string scale = 6;//缩放
  string maxlen = 7;//设备属性的最大长度
  map<string, string> range = 9;//设备属性的枚举值列表
  repeated Properties struct = 17;//JSON对象
  repeated string lable = 10;//故障类型
  google.protobuf.Any defaultValue = 11;//默认值
  bool required = 12;//设备属性是否必选
  map<string, string> bool = 18;//bool类型
  Item item = 15;//数组元素类型
}

message Typespec {
  string type = 1;//设备属性的数据类型
  string specs = 2;
}

message intSpec {
  string min = 1;//设备属性的最小值
  string max = 2;//设备属性的最大值
  string step = 3;//设备属性的步长
  string unit = 4;//属性单位
  string unitName = 5;//单位名称
}

message textSpec {
  string length = 1;
}

message dateSpec {

}

message boolSpec {
  map<string, string> bool = 1;
}

message enumSpec{
  map<string, string> eunm = 1;
}

message structSpec{
  string name = 1;
  string code = 2;
  Typespec typespec =3;
}

message arraySpec {
  string size = 1;//数组长度
  Item item = 2;
}


message Properties {
  string modelName = 1;
  string productId = 2;
  string name = 3;
  string code = 4;
  string description = 5;
  bool required = 9;
  AccessMode accessMode = 6;
  Typespec typeSpec = 7;
//  map<string, string> extra = 8;
}

enum EventType{
  EventTypeUnKnow = 0;
  EventTypeInfo = 1;
  EventTypeAlert = 2;
  EventTypeError = 3;
}

// events
message Events {
  string ModelName = 1;
  string productId = 2;
  string name = 3;
  string code = 4;
  bool required = 8;
  EventType type = 9;
  string description = 5;
  repeated OutputParams OutputParams = 6;
  map<string, string> extra = 7;
}

message InputParams {
  string code = 1;
  string name = 2;
  Typespec typeSpec = 3;
}

message OutputParams {
  string code = 1;
  string name = 2;
  Typespec typeSpec = 3;
}

enum ActionsCallType {
  ActionsCallTypeSync = 0;
  ActionsCallTypeASync = 1;

}
message Actions {
  string ModelName = 1;
  string productId = 2;
  string name = 3;
  string code = 4;
  bool required = 9;
  ActionsCallType callType = 10;
  string description = 5;
  repeated InputParams InputParams = 6;
  repeated OutputParams OutputParams = 7;
  map<string, string> extra = 8;
}


service RpcProduct {
  //查询所有产品
  rpc QueryProductList(QueryProductListRequest) returns (QueryProductListResponse) {}
  //查询单个产品
  rpc QueryProduct(QueryProductRequest) returns (QueryProductResponse) {}
}