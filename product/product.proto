syntax = "proto3";

package product;
option go_package = "github.com/winc-link/iot-cloud-proto/product";
import "common/common.proto";
import "google/protobuf/any.proto";

message QueryProductListRequest{
  map<string, string> extra =1;
}

enum ProductNodeType {
  UnKnow = 0; //未知类型
  Gateway = 1; //网关
  Device = 2;  //直连设备
  SubDevice = 3; //网关子设备
}

enum ProductNetType {
  Other = 0;
  Cellular = 1;
  Wifi = 2;
  Ethernet = 3;
  NB = 4;
}

message QueryProductListResponse {
  message Productinfo {
    uint64 CreateAt = 1; //创建时间
    string ProductId = 2; //产品id
    string ProductName = 3;//产品名称
    string Description = 4;//描述
    ProductNodeType NodeType = 5;//产品的节点类型
    string DataFormat = 6;//上报数据的格式
    common.IotPlatform Platform = 7; //平台名称
    ProductNetType NetType = 8;//联网方式
    map<string, string> extra = 9;
  }
  message List {
    repeated Productinfo ProductInfo = 1;
  }
  message Data {
    uint32 Total = 4;
    List List = 5;
  }
  Data data = 1;
  string RequestId = 2;
  string Code = 3;
  bool Success = 4;
  string errorMessage = 5;
}

message QueryProductRequest {
  string productId = 1;
}

message Datatype {
  string type = 1;
  google.protobuf.Any specs = 2;
}

message Properties {
  string identifier = 1;
  string name = 2;
  string accessMode = 3;
  string desc = 4;
  bool required = 5;
  Datatype dataType = 6;
}


// events
message Events {
  string identifier = 1;
  string name = 2;
  string type = 3;
  bool required = 4;
  string desc = 5;
  string method = 6;
  repeated Outputdata outputData = 7;
}

message Outputdata {
  string identifier = 1;
  string name = 2;
  Datatype1 dataType = 3;
}

message Datatype1 {
  string type = 1;
  google.protobuf.Any specs = 2;
}

message Services {
  string identifier = 1;
  string name = 2;
  bool required = 3;
  string callType = 4;
  string desc = 5;
  string method = 6;
//  repeated Inputdata inputData = 7;
  repeated google.protobuf.Any outputData = 8;
}

message QueryProductResponse {
  message Data {
    uint64 CreateAt = 1; //创建时间
    string ProductId = 2; //产品id
    string ProductName = 3;//产品名称
    string Description = 4;//描述
    ProductNodeType NodeType = 5;//产品的节点类型
    string DataFormat = 6;//上报数据的格式
    common.IotPlatform Platform = 7; //平台名称
    ProductNetType NetType = 8;//联网方式
    repeated Properties properties = 9;//属性
    repeated Events events = 10;//事件
    repeated Services services = 11;
    map<string, string> extra = 12;
  }
  Data data = 1;
  string RequestId = 2;
  string Code = 3;
  bool Success = 4;
  string errorMessage = 5;
}

service RpcProduct {
  //查询所有产品
  rpc QueryProductList(QueryProductListRequest) returns (QueryProductListResponse) {}
  //查询单个产品
  rpc QueryProduct(QueryProductRequest) returns (QueryProductResponse) {}
}