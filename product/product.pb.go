// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: product/product.proto

package product

import (
	common "github.com/winc-link/iot-cloud-proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductNodeType int32

const (
	ProductNodeType_UnKnow    ProductNodeType = 0 //未知类型
	ProductNodeType_Gateway   ProductNodeType = 1 //网关
	ProductNodeType_Device    ProductNodeType = 2 //直连设备
	ProductNodeType_SubDevice ProductNodeType = 3 //网关子设备
)

// Enum value maps for ProductNodeType.
var (
	ProductNodeType_name = map[int32]string{
		0: "UnKnow",
		1: "Gateway",
		2: "Device",
		3: "SubDevice",
	}
	ProductNodeType_value = map[string]int32{
		"UnKnow":    0,
		"Gateway":   1,
		"Device":    2,
		"SubDevice": 3,
	}
)

func (x ProductNodeType) Enum() *ProductNodeType {
	p := new(ProductNodeType)
	*p = x
	return p
}

func (x ProductNodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductNodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_product_product_proto_enumTypes[0].Descriptor()
}

func (ProductNodeType) Type() protoreflect.EnumType {
	return &file_product_product_proto_enumTypes[0]
}

func (x ProductNodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductNodeType.Descriptor instead.
func (ProductNodeType) EnumDescriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{0}
}

type ProductNetType int32

const (
	ProductNetType_Other    ProductNetType = 0
	ProductNetType_Cellular ProductNetType = 1
	ProductNetType_Wifi     ProductNetType = 2
	ProductNetType_Ethernet ProductNetType = 3
	ProductNetType_NB       ProductNetType = 4
)

// Enum value maps for ProductNetType.
var (
	ProductNetType_name = map[int32]string{
		0: "Other",
		1: "Cellular",
		2: "Wifi",
		3: "Ethernet",
		4: "NB",
	}
	ProductNetType_value = map[string]int32{
		"Other":    0,
		"Cellular": 1,
		"Wifi":     2,
		"Ethernet": 3,
		"NB":       4,
	}
)

func (x ProductNetType) Enum() *ProductNetType {
	p := new(ProductNetType)
	*p = x
	return p
}

func (x ProductNetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductNetType) Descriptor() protoreflect.EnumDescriptor {
	return file_product_product_proto_enumTypes[1].Descriptor()
}

func (ProductNetType) Type() protoreflect.EnumType {
	return &file_product_product_proto_enumTypes[1]
}

func (x ProductNetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductNetType.Descriptor instead.
func (ProductNetType) EnumDescriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{1}
}

type AccessMode int32

const (
	AccessMode_R  AccessMode = 0 //读
	AccessMode_W  AccessMode = 1 //写
	AccessMode_RW AccessMode = 2 //读写
)

// Enum value maps for AccessMode.
var (
	AccessMode_name = map[int32]string{
		0: "R",
		1: "W",
		2: "RW",
	}
	AccessMode_value = map[string]int32{
		"R":  0,
		"W":  1,
		"RW": 2,
	}
)

func (x AccessMode) Enum() *AccessMode {
	p := new(AccessMode)
	*p = x
	return p
}

func (x AccessMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessMode) Descriptor() protoreflect.EnumDescriptor {
	return file_product_product_proto_enumTypes[2].Descriptor()
}

func (AccessMode) Type() protoreflect.EnumType {
	return &file_product_product_proto_enumTypes[2]
}

func (x AccessMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessMode.Descriptor instead.
func (AccessMode) EnumDescriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{2}
}

type DataType int32

const (
	DataType_int    DataType = 0
	DataType_float  DataType = 1
	DataType_text   DataType = 2
	DataType_date   DataType = 3
	DataType_bool   DataType = 4
	DataType_enum   DataType = 5
	DataType_struct DataType = 6
	DataType_array  DataType = 7
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0: "int",
		1: "float",
		2: "text",
		3: "date",
		4: "bool",
		5: "enum",
		6: "struct",
		7: "array",
	}
	DataType_value = map[string]int32{
		"int":    0,
		"float":  1,
		"text":   2,
		"date":   3,
		"bool":   4,
		"enum":   5,
		"struct": 6,
		"array":  7,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_product_product_proto_enumTypes[3].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_product_product_proto_enumTypes[3]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{3}
}

type EventType int32

const (
	EventType_EventTypeUnKnow EventType = 0
	EventType_EventTypeInfo   EventType = 1
	EventType_EventTypeAlert  EventType = 2
	EventType_EventTypeError  EventType = 3
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EventTypeUnKnow",
		1: "EventTypeInfo",
		2: "EventTypeAlert",
		3: "EventTypeError",
	}
	EventType_value = map[string]int32{
		"EventTypeUnKnow": 0,
		"EventTypeInfo":   1,
		"EventTypeAlert":  2,
		"EventTypeError":  3,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_product_product_proto_enumTypes[4].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_product_product_proto_enumTypes[4]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{4}
}

type ActionsCallType int32

const (
	ActionsCallType_ActionsCallTypeSync  ActionsCallType = 0
	ActionsCallType_ActionsCallTypeASync ActionsCallType = 1
)

// Enum value maps for ActionsCallType.
var (
	ActionsCallType_name = map[int32]string{
		0: "ActionsCallTypeSync",
		1: "ActionsCallTypeASync",
	}
	ActionsCallType_value = map[string]int32{
		"ActionsCallTypeSync":  0,
		"ActionsCallTypeASync": 1,
	}
)

func (x ActionsCallType) Enum() *ActionsCallType {
	p := new(ActionsCallType)
	*p = x
	return p
}

func (x ActionsCallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionsCallType) Descriptor() protoreflect.EnumDescriptor {
	return file_product_product_proto_enumTypes[5].Descriptor()
}

func (ActionsCallType) Type() protoreflect.EnumType {
	return &file_product_product_proto_enumTypes[5]
}

func (x ActionsCallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionsCallType.Descriptor instead.
func (ActionsCallType) EnumDescriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{5}
}

type QueryProductListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extra map[string]string `protobuf:"bytes,1,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *QueryProductListRequest) Reset() {
	*x = QueryProductListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductListRequest) ProtoMessage() {}

func (x *QueryProductListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductListRequest.ProtoReflect.Descriptor instead.
func (*QueryProductListRequest) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{0}
}

func (x *QueryProductListRequest) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type Productinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateAt     uint64             `protobuf:"varint,1,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`                              //创建时间
	ProductId    string             `protobuf:"bytes,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`                             //产品id
	ProductName  string             `protobuf:"bytes,3,opt,name=ProductName,proto3" json:"ProductName,omitempty"`                         //产品名称
	Description  string             `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`                         //描述
	NodeType     ProductNodeType    `protobuf:"varint,5,opt,name=NodeType,proto3,enum=product.ProductNodeType" json:"NodeType,omitempty"` //产品的节点类型
	DataFormat   string             `protobuf:"bytes,6,opt,name=DataFormat,proto3" json:"DataFormat,omitempty"`                           //上报数据的格式
	Platform     common.IotPlatform `protobuf:"varint,7,opt,name=Platform,proto3,enum=common.IotPlatform" json:"Platform,omitempty"`      //平台名称
	NetType      ProductNetType     `protobuf:"varint,8,opt,name=NetType,proto3,enum=product.ProductNetType" json:"NetType,omitempty"`    //联网方式
	ProtocolType string             `protobuf:"bytes,13,opt,name=protocolType,proto3" json:"protocolType,omitempty"`                      //协议类型
	Properties   []*Properties      `protobuf:"bytes,9,rep,name=properties,proto3" json:"properties,omitempty"`                           //属性
	Events       []*Events          `protobuf:"bytes,10,rep,name=events,proto3" json:"events,omitempty"`                                  //事件
	Actions      []*Actions         `protobuf:"bytes,11,rep,name=actions,proto3" json:"actions,omitempty"`                                //动作
	Extra        map[string]string  `protobuf:"bytes,12,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Productinfo) Reset() {
	*x = Productinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Productinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Productinfo) ProtoMessage() {}

func (x *Productinfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Productinfo.ProtoReflect.Descriptor instead.
func (*Productinfo) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{1}
}

func (x *Productinfo) GetCreateAt() uint64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Productinfo) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Productinfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *Productinfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Productinfo) GetNodeType() ProductNodeType {
	if x != nil {
		return x.NodeType
	}
	return ProductNodeType_UnKnow
}

func (x *Productinfo) GetDataFormat() string {
	if x != nil {
		return x.DataFormat
	}
	return ""
}

func (x *Productinfo) GetPlatform() common.IotPlatform {
	if x != nil {
		return x.Platform
	}
	return common.IotPlatform(0)
}

func (x *Productinfo) GetNetType() ProductNetType {
	if x != nil {
		return x.NetType
	}
	return ProductNetType_Other
}

func (x *Productinfo) GetProtocolType() string {
	if x != nil {
		return x.ProtocolType
	}
	return ""
}

func (x *Productinfo) GetProperties() []*Properties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Productinfo) GetEvents() []*Events {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Productinfo) GetActions() []*Actions {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *Productinfo) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type QueryProductListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data         *QueryProductListResponse_Data `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	RequestId    string                         `protobuf:"bytes,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Code         string                         `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Success      bool                           `protobuf:"varint,4,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrorMessage string                         `protobuf:"bytes,5,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *QueryProductListResponse) Reset() {
	*x = QueryProductListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductListResponse) ProtoMessage() {}

func (x *QueryProductListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductListResponse.ProtoReflect.Descriptor instead.
func (*QueryProductListResponse) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{2}
}

func (x *QueryProductListResponse) GetData() *QueryProductListResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryProductListResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *QueryProductListResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *QueryProductListResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryProductListResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type QueryProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *QueryProductRequest) Reset() {
	*x = QueryProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductRequest) ProtoMessage() {}

func (x *QueryProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductRequest.ProtoReflect.Descriptor instead.
func (*QueryProductRequest) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{3}
}

func (x *QueryProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type QueryProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Productinfo  *Productinfo `protobuf:"bytes,1,opt,name=Productinfo,proto3" json:"Productinfo,omitempty"`
	RequestId    string       `protobuf:"bytes,2,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Code         string       `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Success      bool         `protobuf:"varint,4,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrorMessage string       `protobuf:"bytes,5,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *QueryProductResponse) Reset() {
	*x = QueryProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductResponse) ProtoMessage() {}

func (x *QueryProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductResponse.ProtoReflect.Descriptor instead.
func (*QueryProductResponse) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{4}
}

func (x *QueryProductResponse) GetProductinfo() *Productinfo {
	if x != nil {
		return x.Productinfo
	}
	return nil
}

func (x *QueryProductResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *QueryProductResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *QueryProductResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryProductResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type DataType `protobuf:"varint,1,opt,name=type,proto3,enum=product.DataType" json:"type,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{5}
}

func (x *Item) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_int
}

type Typespec2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         DataType          `protobuf:"varint,1,opt,name=type,proto3,enum=product.DataType" json:"type,omitempty"`                                                                    //设备属性的数据类型
	Min          string            `protobuf:"bytes,2,opt,name=min,proto3" json:"min,omitempty"`                                                                                             //设备属性的最小值
	Max          string            `protobuf:"bytes,3,opt,name=max,proto3" json:"max,omitempty"`                                                                                             //设备属性的最大值
	Step         string            `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`                                                                                           //设备属性的步长
	Unit         string            `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`                                                                                           //属性单位
	UnitName     string            `protobuf:"bytes,16,opt,name=unitName,proto3" json:"unitName,omitempty"`                                                                                  //单位名称
	Scale        string            `protobuf:"bytes,6,opt,name=scale,proto3" json:"scale,omitempty"`                                                                                         //缩放
	Maxlen       string            `protobuf:"bytes,7,opt,name=maxlen,proto3" json:"maxlen,omitempty"`                                                                                       //设备属性的最大长度
	Range        map[string]string `protobuf:"bytes,9,rep,name=range,proto3" json:"range,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //设备属性的枚举值列表
	Struct       []*Properties     `protobuf:"bytes,17,rep,name=struct,proto3" json:"struct,omitempty"`                                                                                      //JSON对象
	Lable        []string          `protobuf:"bytes,10,rep,name=lable,proto3" json:"lable,omitempty"`                                                                                        //故障类型
	DefaultValue *anypb.Any        `protobuf:"bytes,11,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`                                                                          //默认值
	Required     bool              `protobuf:"varint,12,opt,name=required,proto3" json:"required,omitempty"`                                                                                 //设备属性是否必选
	Bool         map[string]string `protobuf:"bytes,18,rep,name=bool,proto3" json:"bool,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`  //bool类型
	Item         *Item             `protobuf:"bytes,15,opt,name=item,proto3" json:"item,omitempty"`                                                                                          //数组元素类型
}

func (x *Typespec2) Reset() {
	*x = Typespec2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Typespec2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Typespec2) ProtoMessage() {}

func (x *Typespec2) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Typespec2.ProtoReflect.Descriptor instead.
func (*Typespec2) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{6}
}

func (x *Typespec2) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_int
}

func (x *Typespec2) GetMin() string {
	if x != nil {
		return x.Min
	}
	return ""
}

func (x *Typespec2) GetMax() string {
	if x != nil {
		return x.Max
	}
	return ""
}

func (x *Typespec2) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *Typespec2) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Typespec2) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *Typespec2) GetScale() string {
	if x != nil {
		return x.Scale
	}
	return ""
}

func (x *Typespec2) GetMaxlen() string {
	if x != nil {
		return x.Maxlen
	}
	return ""
}

func (x *Typespec2) GetRange() map[string]string {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *Typespec2) GetStruct() []*Properties {
	if x != nil {
		return x.Struct
	}
	return nil
}

func (x *Typespec2) GetLable() []string {
	if x != nil {
		return x.Lable
	}
	return nil
}

func (x *Typespec2) GetDefaultValue() *anypb.Any {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *Typespec2) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Typespec2) GetBool() map[string]string {
	if x != nil {
		return x.Bool
	}
	return nil
}

func (x *Typespec2) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type Typespec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  DataType `protobuf:"varint,1,opt,name=type,proto3,enum=product.DataType" json:"type,omitempty"` //设备属性的数据类型
	Specs []byte   `protobuf:"bytes,2,opt,name=specs,proto3" json:"specs,omitempty"`
}

func (x *Typespec) Reset() {
	*x = Typespec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Typespec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Typespec) ProtoMessage() {}

func (x *Typespec) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Typespec.ProtoReflect.Descriptor instead.
func (*Typespec) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{7}
}

func (x *Typespec) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_int
}

func (x *Typespec) GetSpecs() []byte {
	if x != nil {
		return x.Specs
	}
	return nil
}

type IntSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min      string `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`           //设备属性的最小值
	Max      string `protobuf:"bytes,2,opt,name=max,proto3" json:"max,omitempty"`           //设备属性的最大值
	Step     string `protobuf:"bytes,3,opt,name=step,proto3" json:"step,omitempty"`         //设备属性的步长
	Unit     string `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`         //属性单位
	UnitName string `protobuf:"bytes,5,opt,name=unitName,proto3" json:"unitName,omitempty"` //单位名称
}

func (x *IntSpec) Reset() {
	*x = IntSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntSpec) ProtoMessage() {}

func (x *IntSpec) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntSpec.ProtoReflect.Descriptor instead.
func (*IntSpec) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{8}
}

func (x *IntSpec) GetMin() string {
	if x != nil {
		return x.Min
	}
	return ""
}

func (x *IntSpec) GetMax() string {
	if x != nil {
		return x.Max
	}
	return ""
}

func (x *IntSpec) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *IntSpec) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *IntSpec) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

type TextSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length string `protobuf:"bytes,1,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *TextSpec) Reset() {
	*x = TextSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextSpec) ProtoMessage() {}

func (x *TextSpec) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextSpec.ProtoReflect.Descriptor instead.
func (*TextSpec) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{9}
}

func (x *TextSpec) GetLength() string {
	if x != nil {
		return x.Length
	}
	return ""
}

type DateSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DateSpec) Reset() {
	*x = DateSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateSpec) ProtoMessage() {}

func (x *DateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateSpec.ProtoReflect.Descriptor instead.
func (*DateSpec) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{10}
}

type BoolSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bool map[string]string `protobuf:"bytes,1,rep,name=bool,proto3" json:"bool,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BoolSpec) Reset() {
	*x = BoolSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolSpec) ProtoMessage() {}

func (x *BoolSpec) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolSpec.ProtoReflect.Descriptor instead.
func (*BoolSpec) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{11}
}

func (x *BoolSpec) GetBool() map[string]string {
	if x != nil {
		return x.Bool
	}
	return nil
}

type EnumSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eunm map[string]string `protobuf:"bytes,1,rep,name=eunm,proto3" json:"eunm,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EnumSpec) Reset() {
	*x = EnumSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumSpec) ProtoMessage() {}

func (x *EnumSpec) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumSpec.ProtoReflect.Descriptor instead.
func (*EnumSpec) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{12}
}

func (x *EnumSpec) GetEunm() map[string]string {
	if x != nil {
		return x.Eunm
	}
	return nil
}

type StructSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code     string    `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Typespec *Typespec `protobuf:"bytes,3,opt,name=typespec,proto3" json:"typespec,omitempty"`
}

func (x *StructSpec) Reset() {
	*x = StructSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructSpec) ProtoMessage() {}

func (x *StructSpec) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructSpec.ProtoReflect.Descriptor instead.
func (*StructSpec) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{13}
}

func (x *StructSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StructSpec) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StructSpec) GetTypespec() *Typespec {
	if x != nil {
		return x.Typespec
	}
	return nil
}

type ArraySpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size string `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"` //数组长度
}

func (x *ArraySpec) Reset() {
	*x = ArraySpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArraySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArraySpec) ProtoMessage() {}

func (x *ArraySpec) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArraySpec.ProtoReflect.Descriptor instead.
func (*ArraySpec) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{14}
}

func (x *ArraySpec) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type Properties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelName   string            `protobuf:"bytes,1,opt,name=ModelName,proto3" json:"ModelName,omitempty"`
	ProductId   string            `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty"`
	Name        string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Code        string            `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Description string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Required    bool              `protobuf:"varint,9,opt,name=required,proto3" json:"required,omitempty"`
	AccessMode  AccessMode        `protobuf:"varint,6,opt,name=accessMode,proto3,enum=product.AccessMode" json:"accessMode,omitempty"`
	TypeSpec    *Typespec         `protobuf:"bytes,7,opt,name=typeSpec,proto3" json:"typeSpec,omitempty"`
	Extra       map[string]string `protobuf:"bytes,8,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Properties) Reset() {
	*x = Properties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Properties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Properties) ProtoMessage() {}

func (x *Properties) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Properties.ProtoReflect.Descriptor instead.
func (*Properties) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{15}
}

func (x *Properties) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *Properties) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Properties) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Properties) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Properties) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Properties) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Properties) GetAccessMode() AccessMode {
	if x != nil {
		return x.AccessMode
	}
	return AccessMode_R
}

func (x *Properties) GetTypeSpec() *Typespec {
	if x != nil {
		return x.TypeSpec
	}
	return nil
}

func (x *Properties) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

// events
type Events struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelName    string            `protobuf:"bytes,1,opt,name=ModelName,proto3" json:"ModelName,omitempty"`
	ProductId    string            `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty"`
	Name         string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Code         string            `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Required     bool              `protobuf:"varint,8,opt,name=required,proto3" json:"required,omitempty"`
	Type         EventType         `protobuf:"varint,9,opt,name=type,proto3,enum=product.EventType" json:"type,omitempty"`
	Description  string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	OutputParams []*OutputParams   `protobuf:"bytes,6,rep,name=OutputParams,proto3" json:"OutputParams,omitempty"`
	Extra        map[string]string `protobuf:"bytes,7,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Events) Reset() {
	*x = Events{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Events) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Events) ProtoMessage() {}

func (x *Events) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Events.ProtoReflect.Descriptor instead.
func (*Events) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{16}
}

func (x *Events) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *Events) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Events) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Events) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Events) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Events) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EventTypeUnKnow
}

func (x *Events) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Events) GetOutputParams() []*OutputParams {
	if x != nil {
		return x.OutputParams
	}
	return nil
}

func (x *Events) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type InputParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string    `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name     string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TypeSpec *Typespec `protobuf:"bytes,3,opt,name=typeSpec,proto3" json:"typeSpec,omitempty"`
}

func (x *InputParams) Reset() {
	*x = InputParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputParams) ProtoMessage() {}

func (x *InputParams) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputParams.ProtoReflect.Descriptor instead.
func (*InputParams) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{17}
}

func (x *InputParams) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *InputParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InputParams) GetTypeSpec() *Typespec {
	if x != nil {
		return x.TypeSpec
	}
	return nil
}

type OutputParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string    `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name     string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TypeSpec *Typespec `protobuf:"bytes,3,opt,name=typeSpec,proto3" json:"typeSpec,omitempty"`
}

func (x *OutputParams) Reset() {
	*x = OutputParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputParams) ProtoMessage() {}

func (x *OutputParams) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputParams.ProtoReflect.Descriptor instead.
func (*OutputParams) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{18}
}

func (x *OutputParams) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OutputParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OutputParams) GetTypeSpec() *Typespec {
	if x != nil {
		return x.TypeSpec
	}
	return nil
}

type Actions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelName    string            `protobuf:"bytes,1,opt,name=ModelName,proto3" json:"ModelName,omitempty"`
	ProductId    string            `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty"`
	Name         string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Code         string            `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Required     bool              `protobuf:"varint,9,opt,name=required,proto3" json:"required,omitempty"`
	CallType     ActionsCallType   `protobuf:"varint,10,opt,name=callType,proto3,enum=product.ActionsCallType" json:"callType,omitempty"`
	Description  string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	InputParams  []*InputParams    `protobuf:"bytes,6,rep,name=InputParams,proto3" json:"InputParams,omitempty"`
	OutputParams []*OutputParams   `protobuf:"bytes,7,rep,name=OutputParams,proto3" json:"OutputParams,omitempty"`
	Extra        map[string]string `protobuf:"bytes,8,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Actions) Reset() {
	*x = Actions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Actions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actions) ProtoMessage() {}

func (x *Actions) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actions.ProtoReflect.Descriptor instead.
func (*Actions) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{19}
}

func (x *Actions) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *Actions) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Actions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Actions) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Actions) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Actions) GetCallType() ActionsCallType {
	if x != nil {
		return x.CallType
	}
	return ActionsCallType_ActionsCallTypeSync
}

func (x *Actions) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Actions) GetInputParams() []*InputParams {
	if x != nil {
		return x.InputParams
	}
	return nil
}

func (x *Actions) GetOutputParams() []*OutputParams {
	if x != nil {
		return x.OutputParams
	}
	return nil
}

func (x *Actions) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type QueryProductListResponse_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductInfo []*Productinfo `protobuf:"bytes,1,rep,name=ProductInfo,proto3" json:"ProductInfo,omitempty"`
}

func (x *QueryProductListResponse_List) Reset() {
	*x = QueryProductListResponse_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductListResponse_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductListResponse_List) ProtoMessage() {}

func (x *QueryProductListResponse_List) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductListResponse_List.ProtoReflect.Descriptor instead.
func (*QueryProductListResponse_List) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{2, 0}
}

func (x *QueryProductListResponse_List) GetProductInfo() []*Productinfo {
	if x != nil {
		return x.ProductInfo
	}
	return nil
}

type QueryProductListResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                         `protobuf:"varint,4,opt,name=Total,proto3" json:"Total,omitempty"`
	List  *QueryProductListResponse_List `protobuf:"bytes,5,opt,name=List,proto3" json:"List,omitempty"`
}

func (x *QueryProductListResponse_Data) Reset() {
	*x = QueryProductListResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProductListResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProductListResponse_Data) ProtoMessage() {}

func (x *QueryProductListResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProductListResponse_Data.ProtoReflect.Descriptor instead.
func (*QueryProductListResponse_Data) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{2, 1}
}

func (x *QueryProductListResponse_Data) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryProductListResponse_Data) GetList() *QueryProductListResponse_List {
	if x != nil {
		return x.List
	}
	return nil
}

type ArraySpecItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type DataType `protobuf:"varint,2,opt,name=type,proto3,enum=product.DataType" json:"type,omitempty"` //数组内元素类型
}

func (x *ArraySpecItem) Reset() {
	*x = ArraySpecItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArraySpecItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArraySpecItem) ProtoMessage() {}

func (x *ArraySpecItem) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArraySpecItem.ProtoReflect.Descriptor instead.
func (*ArraySpecItem) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ArraySpecItem) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_int
}

var File_product_product_proto protoreflect.FileDescriptor

var file_product_product_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x96, 0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a,
	0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe4, 0x04, 0x0a, 0x0b, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2f, 0x0a,
	0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x31,
	0x0a, 0x07, 0x4e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x4e, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x35, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xe0, 0x02, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x3e, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x58, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xde, 0x04, 0x0a, 0x09, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x70, 0x65, 0x63, 0x32, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x61, 0x78, 0x6c, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x78,
	0x6c, 0x65, 0x6e, 0x12, 0x33, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x70, 0x65, 0x63, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x70,
	0x65, 0x63, 0x32, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x62,
	0x6f, 0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x1a, 0x38, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x37, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x47, 0x0a, 0x08, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x70, 0x65, 0x63, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x65, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x70, 0x65,
	0x63, 0x73, 0x22, 0x71, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x22, 0x0a, 0x08, 0x74, 0x65, 0x78, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x0a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x22, 0x74, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6c, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x2f, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x62, 0x6f, 0x6f, 0x6c, 0x53, 0x70,
	0x65, 0x63, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x62, 0x6f,
	0x6f, 0x6c, 0x1a, 0x37, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x74, 0x0a, 0x08, 0x65,
	0x6e, 0x75, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2f, 0x0a, 0x04, 0x65, 0x75, 0x6e, 0x6d, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x45, 0x75, 0x6e, 0x6d, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x65, 0x75, 0x6e, 0x6d, 0x1a, 0x37, 0x0a, 0x09, 0x45, 0x75, 0x6e, 0x6d,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x63, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x70, 0x65, 0x63, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x70, 0x65, 0x63, 0x22, 0x4e, 0x0a, 0x09, 0x61, 0x72, 0x72, 0x61, 0x79, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x1a, 0x2d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12,
	0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x82, 0x03, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x53, 0x70, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x70, 0x65,
	0x63, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x34, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf9, 0x02, 0x0a, 0x06,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x0c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0c, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a,
	0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x64, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x70, 0x65, 0x63, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x70, 0x65, 0x63, 0x22, 0x65, 0x0a,
	0x0c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x70, 0x65, 0x63, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x22, 0xc1, 0x03, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x34, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61,
	0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x39, 0x0a, 0x0c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0c, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38,
	0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x45, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55,
	0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x10, 0x03, 0x2a,
	0x49, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x65, 0x6c, 0x6c, 0x75, 0x6c, 0x61, 0x72, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x69,
	0x66, 0x69, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x42, 0x10, 0x04, 0x2a, 0x22, 0x0a, 0x0a, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x05, 0x0a, 0x01, 0x52, 0x10, 0x00, 0x12,
	0x05, 0x0a, 0x01, 0x57, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x52, 0x57, 0x10, 0x02, 0x2a, 0x5d,
	0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x69, 0x6e,
	0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x65, 0x6e, 0x75, 0x6d, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x10, 0x07, 0x2a, 0x5b, 0x0a,
	0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x2a, 0x44, 0x0a, 0x0f, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x13, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x79, 0x6e, 0x63, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x41, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x01,
	0x32, 0xb6, 0x01, 0x0a, 0x0a, 0x52, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x59, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x69, 0x6e, 0x63, 0x2d, 0x6c, 0x69, 0x6e,
	0x6b, 0x2f, 0x69, 0x6f, 0x74, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_product_product_proto_rawDescOnce sync.Once
	file_product_product_proto_rawDescData = file_product_product_proto_rawDesc
)

func file_product_product_proto_rawDescGZIP() []byte {
	file_product_product_proto_rawDescOnce.Do(func() {
		file_product_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_product_proto_rawDescData)
	})
	return file_product_product_proto_rawDescData
}

var file_product_product_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_product_product_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_product_product_proto_goTypes = []interface{}{
	(ProductNodeType)(0),                  // 0: product.ProductNodeType
	(ProductNetType)(0),                   // 1: product.ProductNetType
	(AccessMode)(0),                       // 2: product.AccessMode
	(DataType)(0),                         // 3: product.DataType
	(EventType)(0),                        // 4: product.EventType
	(ActionsCallType)(0),                  // 5: product.ActionsCallType
	(*QueryProductListRequest)(nil),       // 6: product.QueryProductListRequest
	(*Productinfo)(nil),                   // 7: product.Productinfo
	(*QueryProductListResponse)(nil),      // 8: product.QueryProductListResponse
	(*QueryProductRequest)(nil),           // 9: product.QueryProductRequest
	(*QueryProductResponse)(nil),          // 10: product.QueryProductResponse
	(*Item)(nil),                          // 11: product.Item
	(*Typespec2)(nil),                     // 12: product.Typespec2
	(*Typespec)(nil),                      // 13: product.Typespec
	(*IntSpec)(nil),                       // 14: product.intSpec
	(*TextSpec)(nil),                      // 15: product.textSpec
	(*DateSpec)(nil),                      // 16: product.dateSpec
	(*BoolSpec)(nil),                      // 17: product.boolSpec
	(*EnumSpec)(nil),                      // 18: product.enumSpec
	(*StructSpec)(nil),                    // 19: product.structSpec
	(*ArraySpec)(nil),                     // 20: product.arraySpec
	(*Properties)(nil),                    // 21: product.Properties
	(*Events)(nil),                        // 22: product.Events
	(*InputParams)(nil),                   // 23: product.InputParams
	(*OutputParams)(nil),                  // 24: product.OutputParams
	(*Actions)(nil),                       // 25: product.Actions
	nil,                                   // 26: product.QueryProductListRequest.ExtraEntry
	nil,                                   // 27: product.Productinfo.ExtraEntry
	(*QueryProductListResponse_List)(nil), // 28: product.QueryProductListResponse.List
	(*QueryProductListResponse_Data)(nil), // 29: product.QueryProductListResponse.Data
	nil,                                   // 30: product.Typespec2.RangeEntry
	nil,                                   // 31: product.Typespec2.BoolEntry
	nil,                                   // 32: product.boolSpec.BoolEntry
	nil,                                   // 33: product.enumSpec.EunmEntry
	(*ArraySpecItem)(nil),                 // 34: product.arraySpec.item
	nil,                                   // 35: product.Properties.ExtraEntry
	nil,                                   // 36: product.Events.ExtraEntry
	nil,                                   // 37: product.Actions.ExtraEntry
	(common.IotPlatform)(0),               // 38: common.IotPlatform
	(*anypb.Any)(nil),                     // 39: google.protobuf.Any
}
var file_product_product_proto_depIdxs = []int32{
	26, // 0: product.QueryProductListRequest.extra:type_name -> product.QueryProductListRequest.ExtraEntry
	0,  // 1: product.Productinfo.NodeType:type_name -> product.ProductNodeType
	38, // 2: product.Productinfo.Platform:type_name -> common.IotPlatform
	1,  // 3: product.Productinfo.NetType:type_name -> product.ProductNetType
	21, // 4: product.Productinfo.properties:type_name -> product.Properties
	22, // 5: product.Productinfo.events:type_name -> product.Events
	25, // 6: product.Productinfo.actions:type_name -> product.Actions
	27, // 7: product.Productinfo.extra:type_name -> product.Productinfo.ExtraEntry
	29, // 8: product.QueryProductListResponse.data:type_name -> product.QueryProductListResponse.Data
	7,  // 9: product.QueryProductResponse.Productinfo:type_name -> product.Productinfo
	3,  // 10: product.Item.type:type_name -> product.DataType
	3,  // 11: product.Typespec2.type:type_name -> product.DataType
	30, // 12: product.Typespec2.range:type_name -> product.Typespec2.RangeEntry
	21, // 13: product.Typespec2.struct:type_name -> product.Properties
	39, // 14: product.Typespec2.defaultValue:type_name -> google.protobuf.Any
	31, // 15: product.Typespec2.bool:type_name -> product.Typespec2.BoolEntry
	11, // 16: product.Typespec2.item:type_name -> product.Item
	3,  // 17: product.Typespec.type:type_name -> product.DataType
	32, // 18: product.boolSpec.bool:type_name -> product.boolSpec.BoolEntry
	33, // 19: product.enumSpec.eunm:type_name -> product.enumSpec.EunmEntry
	13, // 20: product.structSpec.typespec:type_name -> product.Typespec
	2,  // 21: product.Properties.accessMode:type_name -> product.AccessMode
	13, // 22: product.Properties.typeSpec:type_name -> product.Typespec
	35, // 23: product.Properties.extra:type_name -> product.Properties.ExtraEntry
	4,  // 24: product.Events.type:type_name -> product.EventType
	24, // 25: product.Events.OutputParams:type_name -> product.OutputParams
	36, // 26: product.Events.extra:type_name -> product.Events.ExtraEntry
	13, // 27: product.InputParams.typeSpec:type_name -> product.Typespec
	13, // 28: product.OutputParams.typeSpec:type_name -> product.Typespec
	5,  // 29: product.Actions.callType:type_name -> product.ActionsCallType
	23, // 30: product.Actions.InputParams:type_name -> product.InputParams
	24, // 31: product.Actions.OutputParams:type_name -> product.OutputParams
	37, // 32: product.Actions.extra:type_name -> product.Actions.ExtraEntry
	7,  // 33: product.QueryProductListResponse.List.ProductInfo:type_name -> product.Productinfo
	28, // 34: product.QueryProductListResponse.Data.List:type_name -> product.QueryProductListResponse.List
	3,  // 35: product.arraySpec.item.type:type_name -> product.DataType
	6,  // 36: product.RpcProduct.QueryProductList:input_type -> product.QueryProductListRequest
	9,  // 37: product.RpcProduct.QueryProduct:input_type -> product.QueryProductRequest
	8,  // 38: product.RpcProduct.QueryProductList:output_type -> product.QueryProductListResponse
	10, // 39: product.RpcProduct.QueryProduct:output_type -> product.QueryProductResponse
	38, // [38:40] is the sub-list for method output_type
	36, // [36:38] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_product_product_proto_init() }
func file_product_product_proto_init() {
	if File_product_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_product_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Productinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Typespec2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Typespec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArraySpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Properties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Events); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Actions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductListResponse_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProductListResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArraySpecItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_product_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_product_proto_goTypes,
		DependencyIndexes: file_product_product_proto_depIdxs,
		EnumInfos:         file_product_product_proto_enumTypes,
		MessageInfos:      file_product_product_proto_msgTypes,
	}.Build()
	File_product_product_proto = out.File
	file_product_product_proto_rawDesc = nil
	file_product_product_proto_goTypes = nil
	file_product_product_proto_depIdxs = nil
}
