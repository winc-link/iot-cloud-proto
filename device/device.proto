syntax = "proto3";

package device;
option go_package = "github.com/winc-link/iot-cloud-proto/device";
import "common/common.proto";
import "google/protobuf/timestamp.proto";


enum DeviceNodeType {
  UnKnow = 0; //未知类型
  Gateway = 1; //网关
  Device = 2;  //设备
}

message ConnectIotCloudRequest {
  string deviceId = 1;
  map<string, string> extra =3;
}

message ConnectIotCloudResponse {
  common.CommonResponse baseResponse = 1;
  message Data {
    ConnectStatus Status = 1;
  }
  Data data = 2;
}

message CloseConnectIotCloudRequest {
  repeated string deviceIds = 1;
}

message CloseConnectIotCloudResponse {
  common.CommonResponse baseResponse = 1;
  message Data {
    ConnectStatus Status = 1;
  }
  Data data = 2;
}

message QueryDeviceDetailRequest {
  string deviceId = 1;
}

message QueryDeviceDetailResponse {
  DeviceInfo DeviceInfo = 1;
  string RequestId = 2;
  string Code = 3;
  bool Success = 4;
  string errorMessage = 5;
}

message GetDeviceConnectStatusRequest {
  string deviceId = 1;
}

enum ConnectStatus {
  ONLINE = 0;//在线
  OFFLINE = 1;//离线
}

message GetDeviceConnectStatusResponse {
  message Data {
    ConnectStatus Status = 1;
  }

  Data data = 2;
  common.CommonResponse baseResponse = 1;
}

message RegisterDeviceRequest {
  string DeviceName = 1;
  string ProductKey = 2;
  map<string, string> extra =3;
}

message RegisterDeviceResponse {
  message Data {
    string DeviceId = 1;
    string DeviceSecret = 2;
    map<string, string> extra =3;
  }
  Data data = 1;
  string RequestId = 2;
  string Code = 3;
  bool Success = 4;
  string errorMessage = 5;
}


message QueryDeviceListRequest {
  map<string, string> extra =1;
}

enum DeviceStatus {
  UnKnowStatus = 0;
  OnLine = 1;
  OffLine = 2;
  UnActive = 3;
  Disable = 4;
}

message DeviceInfo {
  DeviceStatus Status = 1;
  string DeviceId = 2;
  string ProductId = 9;
  string DeviceName = 3;
  string DeviceSecret = 4;
  google.protobuf.Timestamp UtcCreate = 5;
  string description = 6;
  DeviceNodeType NodeType = 7;
  map<string, string> extra = 8;
  common.IotPlatform Platform = 10; //平台名称
}

message QueryDeviceListResponse {

  message List {
    repeated DeviceInfo DeviceInfo = 1;
  }
  message Data {
    uint32 Total = 4;
    List List = 5;
  }
  Data data = 1;
  string RequestId = 2;
  string Code = 3;
  bool Success = 4;
  string errorMessage = 5;
}

message PlatformCustomPublishRequest {
  string deviceId = 1;
  string topic = 2;
  int32 qos = 3;
  bool retained = 4;
  string payload = 5;
}


message PlatformCustomUnSubscribeRequest {
  repeated string  topics = 1;
}

service RpcDevice {
  //设备连接云服务
  rpc ConnectIotCloud(ConnectIotCloudRequest) returns (ConnectIotCloudResponse) {}
  // 设备断开链接
  rpc CloseConnectIotCloud(CloseConnectIotCloudRequest) returns (CloseConnectIotCloudResponse) {}
  // 查询设备连接状态
  rpc GetDeviceConnectStatus (GetDeviceConnectStatusRequest) returns(GetDeviceConnectStatusResponse){}
  // 查询指定设备的详细信息
  rpc QueryDeviceDetail(QueryDeviceDetailRequest) returns (QueryDeviceDetailResponse) {}
  //查询所有设备
  rpc QueryDeviceList(QueryDeviceListRequest) returns (QueryDeviceListResponse) {}
  // 添加设备
  rpc RegisterDevice (RegisterDeviceRequest) returns (RegisterDeviceResponse) {}
  // 删除设备
//  rpc RegisterDevice (RegisterDeviceRequest) returns (RegisterDeviceResponse) {}
  // 平台自定义消息推Public
  rpc PlatformCustomPublish(PlatformCustomPublishRequest) returns (common.CommonResponse) {}
  // 平台自定义消息UnSubscribe
  rpc PlatformCustomUnSubscribe(PlatformCustomUnSubscribeRequest) returns (common.CommonResponse) {}
}